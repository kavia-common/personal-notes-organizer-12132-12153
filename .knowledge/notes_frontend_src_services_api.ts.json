{"is_source_file": true, "format": "TypeScript", "description": "This file implements the client interface for a notes application, supporting both backend API calls via fetch and a local storage mock for offline use. It defines the NotesAPI interface, functions for backend communication, and a mock store, providing a unified API with graceful fallback mechanisms.", "external_files": ["../types"], "external_methods": ["fetch"], "published": ["NotesAPI", "getNotesAPI"], "classes": [], "methods": [{"name": "function createBackendClient(baseUrl: string, mock: NotesAPI): NotesAPI { createBackendClient", "description": "Creates a NotesAPI implementation that communicates with a backend server using fetch, with fallbacks to a mock implementation on failure.", "scope": "", "scopeKind": ""}, {"name": "function createLocalMock(): NotesAPI { createLocalMock", "description": "Creates a mock NotesAPI implementation backed by localStorage, supporting offline use and initial demo notes.", "scope": "", "scopeKind": ""}, {"name": "export function getNotesAPI(): NotesAPI { getNotesAPI", "description": "Factory function that returns the appropriate NotesAPI instance, preferring backend if environment variable is set, otherwise falling back to the mock implementation.", "scope": "", "scopeKind": ""}, {"name": "create(input: CreateNoteInput): Promise<Note>; create", "scope": "NotesAPI", "scopeKind": "interface", "description": "unavailable"}, {"name": "get(id: NoteID): Promise<Note | null>; get", "scope": "NotesAPI", "scopeKind": "interface", "description": "unavailable"}, {"name": "list(query?: string): Promise<Note[]>; list", "scope": "NotesAPI", "scopeKind": "interface", "description": "unavailable"}, {"name": "remove(id: NoteID): Promise<void>; remove", "scope": "NotesAPI", "scopeKind": "interface", "description": "unavailable"}, {"name": "update(id: NoteID, input: UpdateNoteInput): Promise<Note>; update", "scope": "NotesAPI", "scopeKind": "interface", "description": "unavailable"}], "calls": ["fetch", "JSON.stringify", "JSON.parse", "localStorage.getItem", "localStorage.setItem", "Array.prototype.sort", "Array.prototype.filter", "Array.prototype.find", "Array.prototype.unshift"], "search-terms": ["NotesAPI", "api.ts", "fetch", "localStorage", "NotesAPI interface", "fallback", "mock store", "environment variable"], "state": 2, "file_id": 9, "knowledge_revision": 19, "git_revision": "", "ctags": [{"_type": "tag", "name": "NotesAPI", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^export interface NotesAPI {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "STORAGE_KEY", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^const STORAGE_KEY = \"notes_app_data_v1\";$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "all", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^      const all = read().sort((a, b) => +new Date(b.updatedAt) - +new Date(a.updatedAt));$/", "language": "TypeScript", "kind": "constant", "scope": "createLocalMock", "scopeKind": "function"}, {"_type": "tag", "name": "all", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^      const all = read();$/", "language": "TypeScript", "kind": "constant", "scope": "createLocalMock", "scopeKind": "function"}, {"_type": "tag", "name": "arr", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^      const arr = JSON.parse(raw) as Note[];$/", "language": "TypeScript", "kind": "constant", "scope": "createLocalMock", "scopeKind": "function"}, {"_type": "tag", "name": "base", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^  const base =$/", "language": "TypeScript", "kind": "constant", "scope": "getNotesAPI", "scopeKind": "function"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^  create(input: CreateNoteInput): Promise<Note>;$/", "language": "TypeScript", "kind": "method", "scope": "NotesAPI", "scopeKind": "interface"}, {"_type": "tag", "name": "createBackendClient", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^function createBackendClient(baseUrl: string, mock: NotesAPI): NotesAPI {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "createLocalMock", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^function createLocalMock(): NotesAPI {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^      const data = (await res.json()) as Note[];$/", "language": "TypeScript", "kind": "constant", "scope": "createBackendClient", "scopeKind": "function"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^    const data: Note[] = [$/", "language": "TypeScript", "kind": "constant", "scope": "createLocalMock", "scopeKind": "function"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^  get(id: NoteID): Promise<Note | null>;$/", "language": "TypeScript", "kind": "method", "scope": "NotesAPI", "scopeKind": "interface"}, {"_type": "tag", "name": "getNotesAPI", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^export function getNotesAPI(): NotesAPI {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^        ...all[idx],$/", "language": "TypeScript", "kind": "constant", "scope": "createLocalMock", "scopeKind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^      const idx = all.findIndex((n) => n.id === id);$/", "language": "TypeScript", "kind": "constant", "scope": "createLocalMock", "scopeKind": "function"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^  list(query?: string): Promise<Note[]>;$/", "language": "TypeScript", "kind": "method", "scope": "NotesAPI", "scopeKind": "interface"}, {"_type": "tag", "name": "mock", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^  const mock = createLocalMock();$/", "language": "TypeScript", "kind": "constant", "scope": "getNotesAPI", "scopeKind": "function"}, {"_type": "tag", "name": "newNote", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^      const newNote: Note = {$/", "language": "TypeScript", "kind": "constant", "scope": "createLocalMock", "scopeKind": "function"}, {"_type": "tag", "name": "next", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^      const next = all.filter((n) => n.id !== id);$/", "language": "TypeScript", "kind": "constant", "scope": "createLocalMock", "scopeKind": "function"}, {"_type": "tag", "name": "note", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^      const note = read().find((n) => n.id === id) || null;$/", "language": "TypeScript", "kind": "constant", "scope": "createLocalMock", "scopeKind": "function"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^      const now = new Date().toISOString();$/", "language": "TypeScript", "kind": "constant", "scope": "createLocalMock", "scopeKind": "function"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^    const now = new Date().toISOString();$/", "language": "TypeScript", "kind": "constant", "scope": "createLocalMock", "scopeKind": "function"}, {"_type": "tag", "name": "q", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^      const q = query ? `?query=${encodeURIComponent(query)}` : \"\";$/", "language": "TypeScript", "kind": "constant", "scope": "createBackendClient", "scopeKind": "function"}, {"_type": "tag", "name": "q", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^      const q = query.toLowerCase();$/", "language": "TypeScript", "kind": "constant", "scope": "createLocalMock", "scopeKind": "function"}, {"_type": "tag", "name": "raw", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^      const raw = localStorage.getItem(STORAGE_KEY);$/", "language": "TypeScript", "kind": "constant", "scope": "createLocalMock", "scopeKind": "function"}, {"_type": "tag", "name": "remove", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^  remove(id: NoteID): Promise<void>;$/", "language": "TypeScript", "kind": "method", "scope": "NotesAPI", "scopeKind": "interface"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^      const res = await fetch(input, init);$/", "language": "TypeScript", "kind": "constant", "scope": "createBackendClient", "scopeKind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^      const res = await safeFetch(`${baseUrl}\\/notes${q}`);$/", "language": "TypeScript", "kind": "constant", "scope": "createBackendClient", "scopeKind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^      const res = await safeFetch(`${baseUrl}\\/notes\\/${encodeURIComponent(id)}`);$/", "language": "TypeScript", "kind": "constant", "scope": "createBackendClient", "scopeKind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^      const res = await safeFetch(`${baseUrl}\\/notes\\/${encodeURIComponent(id)}`, {$/", "language": "TypeScript", "kind": "constant", "scope": "createBackendClient", "scopeKind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^      const res = await safeFetch(`${baseUrl}\\/notes`, {$/", "language": "TypeScript", "kind": "constant", "scope": "createBackendClient", "scopeKind": "function"}, {"_type": "tag", "name": "update", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^  update(id: NoteID, input: UpdateNoteInput): Promise<Note>;$/", "language": "TypeScript", "kind": "method", "scope": "NotesAPI", "scopeKind": "interface"}, {"_type": "tag", "name": "updated", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^      const updated: Note = {$/", "language": "TypeScript", "kind": "constant", "scope": "createLocalMock", "scopeKind": "function"}, {"_type": "tag", "name": "updatedAt", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/services/api.ts", "pattern": "/^        updatedAt: new Date().toISOString(),$/", "language": "TypeScript", "kind": "constant", "scope": "createLocalMock", "scopeKind": "function"}], "hash": "dfa48f0dbd029e2fedbef528b05bd24e", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/services/api.ts", "fields": [{"name": "export interface NotesAPI {", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"19": ""}]}
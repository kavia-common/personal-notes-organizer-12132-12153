{"is_source_file": true, "format": "TypeScript", "description": "This file defines a client-side store class for managing notes within a web application. It provides methods for CRUD operations, subscribing to changes, and maintaining an in-memory copy of notes synchronized with an API.", "external_files": ["../types", "../services/api"], "external_methods": ["getNotesAPI"], "published": ["store"], "classes": [{"name": "NotesStore", "description": "A class managing the local state of notes, providing methods for fetching, updating, subscribing, and removing notes via an API."}], "methods": [{"name": "subscribe(fn: Listener) { subscribe", "description": "Adds a listener function that is called on state changes; returns a function to unsubscribe.", "scope": "NotesStore", "scopeKind": "class"}, {"name": "private emit() { emit", "description": "Internal method to notify all subscribed listeners of state changes.", "scope": "NotesStore", "scopeKind": "class"}, {"name": "async refresh() { refresh", "description": "Fetches the latest notes from the API based on the current query and updates the internal notes list.", "scope": "NotesStore", "scopeKind": "class"}, {"name": "setQuery(q: string) { setQuery", "description": "Sets the search query and triggers a refresh of notes.", "scope": "NotesStore", "scopeKind": "class"}, {"name": "async loadOne(id: string): Promise<Note | null> { loadOne", "description": "Fetches a single note by its ID from the API.", "scope": "NotesStore", "scopeKind": "class"}, {"name": "async create(input: { title: string; content: string; tags: string[] }) { create", "description": "Creates a new note via the API and refreshes the local notes list.", "scope": "NotesStore", "scopeKind": "class"}, {"name": "async update(id: string, input: { title?: string; content?: string; tags?: string[] }) { update", "description": "Updates an existing note by ID via the API and refreshes notes.", "scope": "NotesStore", "scopeKind": "class"}, {"name": "async remove(id: string) { remove", "description": "Deletes a note by ID via the API and refreshes notes.", "scope": "NotesStore", "scopeKind": "class"}, {"name": "constructor() { constructor", "scope": "NotesStore", "scopeKind": "class", "description": "unavailable"}, {"name": "get notes() { notes", "scope": "NotesStore", "scopeKind": "class", "description": "unavailable"}, {"name": "get query() { query", "scope": "NotesStore", "scopeKind": "class", "description": "unavailable"}], "calls": ["getNotesAPI", "this.api.list", "this.api.get", "this.api.create", "this.api.update", "this.api.remove"], "search-terms": ["NotesStore", "store", "refresh", "subscribe", "setQuery", "loadOne", "create", "update", "remove"], "state": 2, "file_id": 10, "knowledge_revision": 21, "git_revision": "", "ctags": [{"_type": "tag", "name": "Listener", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/state/store.ts", "pattern": "/^type Listener = () => void;$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "NotesStore", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/state/store.ts", "pattern": "/^class NotesStore {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "_notes", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/state/store.ts", "pattern": "/^  private _notes: Note[] = [];$/", "language": "TypeScript", "kind": "property", "scope": "NotesStore", "scopeKind": "class"}, {"_type": "tag", "name": "_query", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/state/store.ts", "pattern": "/^  private _query = \"\";$/", "language": "TypeScript", "kind": "property", "scope": "NotesStore", "scopeKind": "class"}, {"_type": "tag", "name": "api", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/state/store.ts", "pattern": "/^  private api: NotesAPI;$/", "language": "TypeScript", "kind": "property", "scope": "NotesStore", "scopeKind": "class"}, {"_type": "tag", "name": "constructor", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/state/store.ts", "pattern": "/^  constructor() {$/", "language": "TypeScript", "kind": "method", "scope": "NotesStore", "scopeKind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/state/store.ts", "pattern": "/^  async create(input: { title: string; content: string; tags: string[] }) {$/", "language": "TypeScript", "kind": "method", "scope": "NotesStore", "scopeKind": "class"}, {"_type": "tag", "name": "emit", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/state/store.ts", "pattern": "/^  private emit() {$/", "language": "TypeScript", "kind": "method", "scope": "NotesStore", "scopeKind": "class"}, {"_type": "tag", "name": "l", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/state/store.ts", "pattern": "/^    for (const l of this.listeners) l();$/", "language": "TypeScript", "kind": "constant", "scope": "NotesStore.emit", "scopeKind": "method"}, {"_type": "tag", "name": "listeners", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/state/store.ts", "pattern": "/^  private listeners: Listener[] = [];$/", "language": "TypeScript", "kind": "property", "scope": "NotesStore", "scopeKind": "class"}, {"_type": "tag", "name": "loadOne", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/state/store.ts", "pattern": "/^  async loadOne(id: string): Promise<Note | null> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesStore", "scopeKind": "class"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/state/store.ts", "pattern": "/^  get notes() {$/", "language": "TypeScript", "kind": "method", "scope": "NotesStore", "scopeKind": "class"}, {"_type": "tag", "name": "query", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/state/store.ts", "pattern": "/^  get query() {$/", "language": "TypeScript", "kind": "method", "scope": "NotesStore", "scopeKind": "class"}, {"_type": "tag", "name": "refresh", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/state/store.ts", "pattern": "/^  async refresh() {$/", "language": "TypeScript", "kind": "method", "scope": "NotesStore", "scopeKind": "class"}, {"_type": "tag", "name": "remove", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/state/store.ts", "pattern": "/^  async remove(id: string) {$/", "language": "TypeScript", "kind": "method", "scope": "NotesStore", "scopeKind": "class"}, {"_type": "tag", "name": "setQuery", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/state/store.ts", "pattern": "/^  setQuery(q: string) {$/", "language": "TypeScript", "kind": "method", "scope": "NotesStore", "scopeKind": "class"}, {"_type": "tag", "name": "store", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/state/store.ts", "pattern": "/^export const store = new NotesStore();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "subscribe", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/state/store.ts", "pattern": "/^  subscribe(fn: Listener) {$/", "language": "TypeScript", "kind": "method", "scope": "NotesStore", "scopeKind": "class"}, {"_type": "tag", "name": "update", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-12132-12153/notes_frontend/src/state/store.ts", "pattern": "/^  async update(id: string, input: { title?: string; content?: string; tags?: string[] }) {$/", "language": "TypeScript", "kind": "method", "scope": "NotesStore", "scopeKind": "class"}], "hash": "bc847522fe2000a15fa5b6db8f34c17a", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/state/store.ts", "fields": [{"name": "private _notes: Note[] = [];", "scope": "NotesStore", "scopeKind": "class", "description": "unavailable"}, {"name": "private _query = \"\";", "scope": "NotesStore", "scopeKind": "class", "description": "unavailable"}, {"name": "private api: NotesAPI;", "scope": "NotesStore", "scopeKind": "class", "description": "unavailable"}, {"name": "private listeners: Listener[] = [];", "scope": "NotesStore", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"21": ""}]}